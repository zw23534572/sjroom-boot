<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>github.sjroom</groupId>
    <artifactId>sjroom-boot</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>sjroom</name>
    <description>sjroom-boot脚手架</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.11.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <properties>
        <!--  统一编译版本  -->
        <java.version>1.8</java.version>
        <sjroom.framework.version>0.0.1-SNAPSHOT</sjroom.framework.version>
        <spring.cloud.version>Greenwich.RELEASE</spring.cloud.version>
        <spring.boot.admin.version>2.1.5</spring.boot.admin.version>
        <swagger.version>2.9.2</swagger.version>
        <swagger.bootstrap.ui>1.9.3</swagger.bootstrap.ui>
        <disruptor.version>3.4.2</disruptor.version>
        <mybatis.plus.version>3.2.0</mybatis.plus.version>
        <beetl.version>2.7.3</beetl.version>
        <redisson.version>3.10.7</redisson.version>
        <beanutils.version>1.9.3</beanutils.version>
        <fastjson.version>1.2.36</fastjson.version>

    </properties>

    <modules>
        <module>sjroom-web</module>
        <module>sjroom-core</module>
        <module>sjroom-mybatis</module>
        <module>sjroom-boot-pom</module>
    </modules>

    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-autoconfigure-processor</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-autoconfigure</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-context</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <!-- test -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>


    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>${beanutils.version}</version>
            </dependency>
            <dependency>
                <groupId>github.sjroom</groupId>
                <artifactId>sjroom-core</artifactId>
                <version>${sjroom.framework.version}</version>
            </dependency>
            <dependency>
                <groupId>github.sjroom</groupId>
                <artifactId>sjroom-web</artifactId>
                <version>${sjroom.framework.version}</version>
            </dependency>
            <dependency>
                <groupId>github.sjroom</groupId>
                <artifactId>sjroom-mybatis</artifactId>
                <version>${sjroom.framework.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>2.6</version>
            </dependency>
            <!-- web api -->
            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>1.5.20</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${swagger.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${swagger.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>swagger-bootstrap-ui</artifactId>
                <version>${swagger.bootstrap.ui}</version>
            </dependency>

            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-bean-validators</artifactId>
                <version>${swagger.version}</version>
            </dependency>
            <!-- mybatis-plus -->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis.plus.version}</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-extension</artifactId>
                <version>${mybatis.plus.version}</version>
            </dependency>

            <dependency>
                <groupId>com.ibeetl</groupId>
                <artifactId>beetl</artifactId>
                <version>${beetl.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring.cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-dependencies</artifactId>
                <version>${spring.boot.admin.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*</include>
                </includes>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <!-- 定义环境 -->
    <!-- mvn clean package -Ptest1 -->
    <!-- 编译的时使用 -P 指定对应的环境 -->
    <profiles>
        <profile>
            <id>dev1</id>
            <properties>
                <activatedProfile>dev1</activatedProfile>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <profile>
            <id>dev2</id>
            <properties>
                <activatedProfile>dev2</activatedProfile>
            </properties>
        </profile>
        <profile>
            <id>test</id>
            <properties>
                <activatedProfile>test</activatedProfile>
            </properties>
        </profile>
        <profile>
            <id>ptest</id>
            <properties>
                <activatedProfile>ptest</activatedProfile>
            </properties>
        </profile>
        <profile>
            <id>pro</id>
            <properties>
                <activatedProfile>pro</activatedProfile>
            </properties>
        </profile>

        <profile>
            <id>deploy</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>verify</phase>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            <!--  配置构建新数字化运营平台项目时的仓库地址  2-->
            <!--  snapshot版本不需要授权，开发人员可以根据情况自由构建  -->
            <!--  release版本需要授权，应由版本管理人员进行构建，因此版本管理人员应在自己本地配置远程仓库的认证  -->
            <distributionManagement>
                <snapshotRepository>
                    <id>dop-snapshots</id>
                    <url>${dop-snapshots-repo}</url>
                </snapshotRepository>
            </distributionManagement>
        </profile>
    </profiles>
</project>
